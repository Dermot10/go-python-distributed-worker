enqueue endpoint receieves jobs (json payload, ids etc) from python (client), which triggers the go service

GO validates req (not type but populated)
enqueue req into redis (LPUSH)
Worker pool service pulls from redis queue using (BRPOP) and processes them 



Redis will be the buffer/queue between producer and consumer (GO)

LPUSH myqueue "task1"
LPUSH myqueue "task2"
Now myqueue looks like: ["task2", "task1"] (head on the left).

BRPOP
remove and return last element (tail/right) of list
blocks if list empty, until timeout

So the oldest element ends up at the tail and is consumed first